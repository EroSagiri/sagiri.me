<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sagiri&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sagiri.me/"/>
  <updated>2020-11-07T15:07:02.320Z</updated>
  <id>https://sagiri.me/</id>
  
  <author>
    <name>Sagiri Izumi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>centos8_PXE</title>
    <link href="https://sagiri.me/2020/11/07/centos8-PXE/"/>
    <id>https://sagiri.me/2020/11/07/centos8-PXE/</id>
    <published>2020-11-07T07:55:36.000Z</published>
    <updated>2020-11-07T15:07:02.320Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CentOS8-PXE-与-Kickstart"><a href="#CentOS8-PXE-与-Kickstart" class="headerlink" title="CentOS8 PXE 与 Kickstart"></a>CentOS8 PXE 与 Kickstart</h1><h2 id="PXE"><a href="#PXE" class="headerlink" title="PXE"></a>PXE</h2><p>预启动执行环境（Preboot eXecution Environment，PXE，也被称为预执行环境）提供了一种使用网络接口（Network Interface）启动计算机的机制。这种机制让计算机的启动可以不依赖本地数据存储设备（如硬盘）或本地已安装的操作系统。<br><a id="more"></a></p><h3 id="DHCP"><a href="#DHCP" class="headerlink" title="DHCP"></a>DHCP</h3><p>动态主机配置协议,是位于网络层的协议。主要用于在网络管理ip地址分配。DHCP的定义 <a href="https://tools.ietf.org/html/rfc2131" target="_blank" rel="noopener">RFC 2131</a></p><h4 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h4><p>客户端先把IP地址设置为0.0.0.0向网络广播(255.255.255.255)DHCP DISCOVER 寻找可用的DHCP服务器。<br>网络内的所有设备都会收到客户端发送的DHCP DISCOVER,但是只有DHCP服务器会向客户端发送DHCP OFFER  DHCP服务器为客户端保留一个IP地址，该消息包含客户端MAC地址、服务器提供的IP地址、子网掩码、租期信息和服务器的IP地址。<br>客户端收到DHCP OFFER必须告诉服务器接受配置信息，向DHCP服务器发送DHCP REQUEST。<br>最后服务器向客户端发送DHCP ACK 确认配置。</p><h3 id="TFTP"><a href="#TFTP" class="headerlink" title="TFTP"></a>TFTP</h3><p>TFTP的定义 <a href="https://tools.ietf.org/html/rfc1350" target="_blank" rel="noopener">RFC 1350</a><br>简单文件传输协议有以下特点  </p><ul><li>使用UDP(端口69)  </li><li>不能列出目录</li><li>无验证或加密机制  </li><li>被用于在远程服务器上读取或写入文件<br>因为没有验证和加密机制通常使用于私人网络。PXE无盘启动、网络设备文件传输。<h3 id="Linux启动加载器"><a href="#Linux启动加载器" class="headerlink" title="Linux启动加载器"></a>Linux启动加载器</h3>启动加载器主要用于加载Linux内核，如GRUB,Syslinux,LILO,rEFInd<h3 id="固件类型"><a href="#固件类型" class="headerlink" title="固件类型"></a>固件类型</h3>BIOS是旧的固件类型，通过主引导记录执行引导器，这种设备的存储设备通常使用MBR分区表<br>UEFI新的固件，通过eps分区，通过引导管理器的启动条目加载UEFI应用  <h3 id="DHCP-Server"><a href="#DHCP-Server" class="headerlink" title="DHCP Server"></a>DHCP Server</h3><h4 id="安装-dhcp-server"><a href="#安装-dhcp-server" class="headerlink" title="安装 dhcp-server"></a>安装 dhcp-server</h4></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf -y install dhcp-server</span><br></pre></td></tr></table></figure><h4 id="配置-dhcp-server"><a href="#配置-dhcp-server" class="headerlink" title="配置 dhcp-server"></a>配置 dhcp-server</h4><p>确保网络内只有一台DHCP服务器<br>确认centos8的IP地址<br>IP: 192.168.122.100/24<br>网关: 192.168.122.1/24<br>next-serve tftp 服务器的地址<br>centos8 dhcp-server IPV4 配置文件在 /etc/dhcp/dhcpd.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"># pxelinux 命名空间</span><br><span class="line">option space pxelinux;</span><br><span class="line">option pxelinux.magic code 208 = string;</span><br><span class="line"># 配置文件</span><br><span class="line">option configfile code 209 = text;</span><br><span class="line"># 前置路径</span><br><span class="line">option pxelinux.pathprefix code 210 = text;</span><br><span class="line">option pxelinux.reboottime code 211 = unsigned integer 32;</span><br><span class="line">option architecture-type code 93 = unsigned integer 16;</span><br><span class="line"></span><br><span class="line">subnet 192.168.122.0 netmask 255.255.255.0 &#123;</span><br><span class="line">        option routers 192.168.122.1;</span><br><span class="line">        option domain-name-servers 223.5.5.5;</span><br><span class="line">        range 192.168.122.2 192.168.122.50;</span><br><span class="line"></span><br><span class="line">        class &quot;pxeclients&quot; &#123;</span><br><span class="line">          match if substring (option vendor-class-identifier, 0, 9) = &quot;PXEClient&quot;;</span><br><span class="line">          next-server 192.168.122.100;</span><br><span class="line"></span><br><span class="line">          if option architecture-type = 00:07 &#123;</span><br><span class="line">            # UEFI</span><br><span class="line">            filename &quot;uefi/grubx64.efi&quot;;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">            # BIOS</span><br><span class="line">            filename &quot;pxelinux/pxelinux.0&quot;;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="本地源"><a href="#本地源" class="headerlink" title="本地源"></a>本地源</h3><p>网络安装CentOS,要配置本地源</p><h4 id="http-协议"><a href="#http-协议" class="headerlink" title="http 协议"></a>http 协议</h4><p>安装nginx,把CentOS8 DVD 镜像挂载到 /usr/share/nginx/html/centos<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dnf -y install nginx</span><br><span class="line">mkdir /usr/share/nginx/html/centos</span><br><span class="line">mount CentOS-8.2.2004-x86_64-dvd1.iso.iso /usr/share/nginx/html/centos</span><br><span class="line">sytemctl enable --now nginx</span><br><span class="line">firewall-cmd --permanent --add-service=http</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure></p><p>repo地址: <a href="http://192.168.122.100/centos" target="_blank" rel="noopener">http://192.168.122.100/centos</a>  </p><h4 id="nfs-协议"><a href="#nfs-协议" class="headerlink" title="nfs 协议"></a>nfs 协议</h4><p>安装 nfs-utils,挂载Centos8 DVD 镜像到 /mnt<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dnf -y install nfs-utils</span><br><span class="line">mount CentOS-8.2.2004-x86_64-dvd1.iso.iso /mnt</span><br></pre></td></tr></table></figure></p><p>编辑 /etc/exports, 共享 /mnt<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/mnt 192.168.122.0/24 (ro)</span><br></pre></td></tr></table></figure></p><p>防火墙<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-service=nfs</span><br><span class="line">firewall-cmd --permanent --add-port=2049/tcp</span><br><span class="line">firewall-cmd --permanent --add-port=2049/udp</span><br><span class="line">firewall-cmd --permanent --add-port=111/tcp</span><br><span class="line">firewall-cmd --permanent --add-port=111/udp</span><br><span class="line">firewall-cmd --permanent --add-port=20048/tcp</span><br><span class="line">firewall-cmd --permanent --add-port=20048/udp</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure></p><p>repo地址: nfs:192.168.122.100:/mnt  </p><h4 id="ftp-协议"><a href="#ftp-协议" class="headerlink" title="ftp 协议"></a>ftp 协议</h4><p>安装 vsftpd<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf -y install vsftpd</span><br></pre></td></tr></table></figure></p><p>配置 vsftpd 允许匿名登陆 /etc/vsftpd/vsftpd.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">anonymous_enable=YES</span><br></pre></td></tr></table></figure></p><p>直接把镜像挂载到/var/ftp无法使用，只能把整个镜像复制到/var/ftp了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount CentOS-8.2.2004-x86_64-dvd1.iso.iso /mnt</span><br><span class="line">cp -r /mnt /var/ftp/centos</span><br></pre></td></tr></table></figure></p><p>repo地址: <a href="ftp://192.168.122.100/centos" target="_blank" rel="noopener">ftp://192.168.122.100/centos</a>  </p><h3 id="配置-tftp-server"><a href="#配置-tftp-server" class="headerlink" title="配置 tftp-server"></a>配置 tftp-server</h3><h4 id="安装-tftp-server"><a href="#安装-tftp-server" class="headerlink" title="安装 tftp-server"></a>安装 tftp-server</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf -y install tftp-server</span><br></pre></td></tr></table></figure><h4 id="复制内核和初始化文件系统"><a href="#复制内核和初始化文件系统" class="headerlink" title="复制内核和初始化文件系统"></a>复制内核和初始化文件系统</h4><p>下载 CentOS8 的 DVD 镜像,通过mount挂载镜像，复制/mnt/images/pxeboot{vmlinuz,initrd.img} 到 /var/lib/tftpboot/images<br>注意权限问题，至少能让其他用户正常访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mount CentOS-8.2.2004-x86_64-dvd1.iso /mnt</span><br><span class="line">mkdir /var/lib/tftpboot/images</span><br><span class="line">cp /mnt/images/pxeboot&#123;vmlinuz,initrd.img&#125; /var/lib/tftpboot/images</span><br><span class="line">chmod 0775 -R /var/lib/tftpboot/images</span><br></pre></td></tr></table></figure></p><h4 id="引导程序"><a href="#引导程序" class="headerlink" title="引导程序"></a>引导程序</h4><h5 id="GRUB-BIOS"><a href="#GRUB-BIOS" class="headerlink" title="GRUB BIOS"></a>GRUB BIOS</h5><p>一般CentOS8 已经安装好了grub2<br>创建网络启动文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub2-mknetdir --net-directory=/var/lib/tftpboot/grub</span><br></pre></td></tr></table></figure></p><p>执行成功，后会返回一个文件路径，把这个文件路径减去tftp服务器的根目录就得到PXE BIOS启动的引导文件了。<br>例如: /var/lib/tftpboot/grub/boot/grub2/i386-pc/core.0 /grub/boot/grub2/i386-pc/core.0<br>把这个路径,修改 /etc/dhcp/dhcpd.conf  # BIOS 下的 filename=/grub/boot/grub2/i386-pc/core.0<br>grub的配置文件 /var/lib/tftpboot/grub/boot/grub2/i386-pc/grub.cfg<br>linux [linuxi内核先对于 tftp root 目录的位置] [内核启动选项]<br>initrd [初始化文件系统]<br>关于内核启动选项可阅读 <a href="https://docs.centos.org/en-US/8-docs/standard-install/assembly_custom-boot-options/" target="_blank" rel="noopener">Boot options reference</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">set default=0</span><br><span class="line">set timeout=5</span><br><span class="line"></span><br><span class="line">echo -e &quot;\nCentos8\n\n&quot;</span><br><span class="line"></span><br><span class="line">menuentry &apos;Centos8&apos; &#123;</span><br><span class="line">        linux /vmlinuz ro ip=dhcp inst.repo=nfs:192.168.122.100:/mnt</span><br><span class="line">        initrd /initrd.img</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h5 id="Syslinux-BIOS"><a href="#Syslinux-BIOS" class="headerlink" title="Syslinux BIOS"></a>Syslinux BIOS</h5><p>安装 syslinux-tftpboot,复制/tftpboot 到 /var/lib/tftpboot/syslinux<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dnf -y install syslinux-tftpboot</span><br><span class="line">cp -r /tftpboot /var/lib/tftpboot/syslinux</span><br><span class="line">cp /var/lib/tftpboot/&#123;vmlinuz,initrd.img&#125; /var/lib/tftpboot/syslinux</span><br></pre></td></tr></table></figure></p><p>配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/lib/tftpboot/syslinux/pxelinux.cfg</span><br><span class="line">touch /var/lib/tftpboot/syslinux/pxelinux.cfg/default</span><br></pre></td></tr></table></figure></p><p>编辑配置文件 /var/lib/tftpboot/syslinux/pxelinux.cfg/default<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">default vesamenu.c32</span><br><span class="line">prompt 1</span><br><span class="line">timeout 50</span><br><span class="line"></span><br><span class="line">display boot.msg</span><br><span class="line"></span><br><span class="line">label linux</span><br><span class="line">  menu label ^Install system</span><br><span class="line">  menu default</span><br><span class="line">  kernel vmlinuz</span><br><span class="line">  append initrd=initrd.img ip=dhcp inst.repo=nfs:192.168.122.100:/mnt</span><br><span class="line">label local</span><br><span class="line">  menu label Boot from ^local drive</span><br><span class="line">  localboot 0xffff</span><br></pre></td></tr></table></figure></p><h4 id="GRUB-UEFI"><a href="#GRUB-UEFI" class="headerlink" title="GRUB UEFI"></a>GRUB UEFI</h4><p>安装 grub2-efi-x64 和 shim-x64<br>dhcp配置文件 uefifile 设置为 /uefi/shim.efi<br>在CentOS8 官方源中找不到x86_64的支持，只能用x86_32<br>/var/lib/tftpboot/grub文件夹是 grub2-mknetdir生成的<br>grub的配置文件存放在 /var/lib/tftpboot/uefi/grub.cfg<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dnf -y install grub2-efi-x64 shim-x64</span><br><span class="line">mkdir /var/lib/tftpboot/uefi/</span><br><span class="line">cp /boot/efi/EFI/centos/shimx64.efi  /var/lib/tftpboot/uefi</span><br><span class="line">cp /boot/efi/EFI/centos/grubx64.efi /var/lib/tftpboot/uefi</span><br><span class="line">mkdir -p /var/lib/tftpboot/EFI/centos</span><br><span class="line">cp -r /var/lib/tftpboot/grub/boot/grub2/i386-pc /var/lib/tftpboot/EFI/centos/x86_64-efi</span><br><span class="line">touch /var/lib/tftpboot/uefi/grub.cfg</span><br></pre></td></tr></table></figure></p><h2 id="Kickstart"><a href="#Kickstart" class="headerlink" title="Kickstart"></a>Kickstart</h2><p>自动化安装CentOS 的方法<br>通过设置Linux内核启动选项 inst.ks，会根据给定的配置文件自动安装系统<br>CentOS安装完成CentOS8后会生成一个anaconda-ks.cfg 存放在 /root 目录<br>把这个文件通过http协议共享，当然你也可以参考<a href="https://docs.centos.org/en-US/centos/install-guide/Kickstart2/#sect-kickstart-introduction" target="_blank" rel="noopener">Kickstart Installations</a>手动编写一个配置文件<br>grubg引导的配置文件<br><img src="/images/Screenshot_20201107_230140.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;CentOS8-PXE-与-Kickstart&quot;&gt;&lt;a href=&quot;#CentOS8-PXE-与-Kickstart&quot; class=&quot;headerlink&quot; title=&quot;CentOS8 PXE 与 Kickstart&quot;&gt;&lt;/a&gt;CentOS8 PXE 与 Kickstart&lt;/h1&gt;&lt;h2 id=&quot;PXE&quot;&gt;&lt;a href=&quot;#PXE&quot; class=&quot;headerlink&quot; title=&quot;PXE&quot;&gt;&lt;/a&gt;PXE&lt;/h2&gt;&lt;p&gt;预启动执行环境（Preboot eXecution Environment，PXE，也被称为预执行环境）提供了一种使用网络接口（Network Interface）启动计算机的机制。这种机制让计算机的启动可以不依赖本地数据存储设备（如硬盘）或本地已安装的操作系统。&lt;br&gt;
    
    </summary>
    
    
      <category term="CentOS8 PXE 与 Kickstart" scheme="https://sagiri.me/tags/CentOS8-PXE-%E4%B8%8E-Kickstart/"/>
    
  </entry>
  
  <entry>
    <title>我的PGP PUBLIC KEY</title>
    <link href="https://sagiri.me/2020/10/04/PGP-KEY/"/>
    <id>https://sagiri.me/2020/10/04/PGP-KEY/</id>
    <published>2020-10-04T08:14:53.000Z</published>
    <updated>2020-11-07T07:52:20.698Z</updated>
    
    <content type="html"><![CDATA[<p>我以前生成过很多PGP密钥不过都丢失了，这个密钥是我最近生成的<br>电子邮箱: <a href="mailto:i@sagiri.me">i@sagiri.me</a><br>密钥指纹: D70D288199132DB1BD427C35768638AAB9B4132C<br>密钥ID: 768638AAB9B4132C<br>密钥已经上传到了 pool.sks-keyservers.net<br>可以使用命令直接导入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpg --keyserver hkp://pool.sks-keyservers.net --receive-keys 768638AAB9B4132C</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>或者复制下面的PGP PUBLIC KEY导入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN PGP PUBLIC KEY BLOCK-----</span><br><span class="line"></span><br><span class="line">mQINBF9gtwYBEADia4ZywZbJ34XECrHDv8o1VIU6d848TosxkBMBKqaq/ORc71KS</span><br><span class="line">D6dfLt5IcLnBfFqM+s+MCqukGOWv29+N7j1XLAy9XG+g+MWyXwXvdw4m+s+pYRBx</span><br><span class="line">2TX5jz5JIsJLzeUXT4b5gdbx8Bopwh1BxgeGvFNYwU7pkjz6Oxmi/SDNya66NDDD</span><br><span class="line">u9ZMo0pNkuWkLX/cjuANDFWcFMbkICoMVxWEbBMdlA5cqwQS2Vu1FpaM/lat2JqZ</span><br><span class="line">cCjOf7xKmXQ0g2rN6jSH2RZEw6ifrosC+aH7NdFvTPXXjaU/nWZQQTMRL1Q42Rj1</span><br><span class="line">GtbsS4nSeGZ3WGL8wd77cShlX+Bd1Xw9chae6APJH3efuGZZM7BqNVWHWvx8XTai</span><br><span class="line">A42perpS8OnJWjXjTZnqhLakMvu+8ddsC3nIk44lJ3qxYIiClJDeYnulUqxNwqbt</span><br><span class="line">+dpfraSgiKOhpzUK7sdu4G9wviKkpCnTeVW36ySmyGLqrM3gp8wtfXvhTdwL3DuM</span><br><span class="line">6kO6nzf3CoXZoMNU8IHiG2PhQWdYN2T4PwMWXiuTgjoCGiZFrgqFIFXz+FqcUwNo</span><br><span class="line">96ihb1kkp8Dmkg7eXRN9yT3902JN1OJqGHaDGFFGwbZ6Uz5f4FLX/ApwU4t7Lc/j</span><br><span class="line">GZ3aCPBR1HRg/ehphjE0tqUEielHFSPJ8wGLt1C4lFG2KDNnHkiXsrdVKQARAQAB</span><br><span class="line">tBRzYWdpcmkgPGlAc2FnaXJpLm1lPokCTgQTAQgAOBYhBNcNKIGZEy2xvUJ8NXaG</span><br><span class="line">OKq5tBMsBQJfYLcGAhsDBQsJCAcCBhUKCQgLAgQWAgMBAh4BAheAAAoJEHaGOKq5</span><br><span class="line">tBMswz4QAKwBfNfLw1c6MzJ7I09vmqTIQnH+Q4wxUhVviaRqMj9neh/ZMeKayV94</span><br><span class="line">slT7Xygks2uXKBOJvgBkjYX34Lz98mTlqDurBjty6MyAkCW9sJAn+BxLB1gUg+y1</span><br><span class="line">boZJrsDmDdm2Lfclp31gAKHBS9YjkrwGxEvmygpzTSuAsvMUJY2AiUnaAi1lYMgL</span><br><span class="line">ITLRMDzL0qUyePAoPs0hVWnNNLWZkTRS155ojebaR5L8PR0fqdOe8nSIxhgqHo05</span><br><span class="line">LLIPGgiGbayAgsYuzt1hCR1UoIbxFcljYstGFHs4Wd9hdimf+IKJx5r4/mmZRwsw</span><br><span class="line">m1sz9fXEskwT3/V7j984k/lbGHAkLE51qvbjM1cWiIDyVf0ZqLRMOWjlL3grbvYU</span><br><span class="line">A3Dh9WjSeLwQsb+FOUOwrbrl85Wp+Ny1bFWSKmwiu8S1vcwpml03CE7DPZBG0fjB</span><br><span class="line">Z+KR9Uo1pjLLEyrJveKXXCFAiZ6UAB6nGQnHgWQKGt8RVPzJTdRcYZV0asewgv5L</span><br><span class="line">78+pMvcLZDO91kbuMBT89njdY5Iz2dgAVyigeGXWsUrNvR7JHy8GqsAoNM1HaDvT</span><br><span class="line">P1pvPsgzQrRKPlJwd2XWtu6xKJJtSrbuLv7wx2cXbLzKoERvrlOTNC5kYTQ2PqJg</span><br><span class="line">LMkOnuRx9a6NVxcPYPgo3gIiU8P1Uw5yZRONVv+bRsViosb94uEDuQINBF9gt1UB</span><br><span class="line">EADVUV2O1U0HJaBVnylnPI21mJ5JhdXIiPafJsmgFT1h8eoNIt4qNRMWtLvMsvbg</span><br><span class="line">Fz/9P8+sNLVagJnpCHCI3NdHDrEGwYdjibMVY9r0BYNkoLlDhztffZZtn2lhL/GL</span><br><span class="line">L4Pyh5E0nnxq9aNMMaMzjRX8EmF9Ol6YwgQVb7/uZ4hMeI6hhqxkoN9UeM1a4hqL</span><br><span class="line">jNxnbiMsgpZbU3KpPo7+2Zb87ieftO5nx/W7nUDl0/8iJBi484S7kaFjcs4dRjDq</span><br><span class="line">xLHLQQ3vp807J+RmWWP6u4t0xlDz66I7ceU/PwyFcVq8QogJmBqgJH5fzmLIkiXm</span><br><span class="line">RLCP61X+T9ro0U5wjsT4O5YPD2B66oULaevli2JIAD84dYfbx/JrxKTlC3vCqbw/</span><br><span class="line">QVwiWomhZfV498nw+lxYr8vIeDA+YKIH9O8k3EY83b/5FY5dr2maSGi/sI87QQ4R</span><br><span class="line">zjhxtO50QtYhxzgOq3MUAOIPTrpjtcpmePCfzYu/d68+QDdOmQwRy73ZftyLoJ6o</span><br><span class="line">3Bw+pcomosCKud34oX11D6zkhV+bFNXiBr2vsotBm9/a+CbiYKOtg3N5UUE4VG4k</span><br><span class="line">tsE0iNO4NX1oU+adm++QuHa93RMNVGerDArs8QzypqLtlgr72gSzdkJBDKTx/Bw6</span><br><span class="line">biSG7gCp5eLxsSN+3SblU2UHr6H5rZxPLDfibeOkLvtQ3wARAQABiQRsBBgBCAAg</span><br><span class="line">FiEE1w0ogZkTLbG9Qnw1doY4qrm0EywFAl9gt1UCGwICQAkQdoY4qrm0EyzBdCAE</span><br><span class="line">GQEIAB0WIQQQc5hjmkxu9+bKLogl/HSMNShGegUCX2C3VQAKCRAl/HSMNShGemXL</span><br><span class="line">EADPnVDwLzOWlqY/3kWmEdFlngTF6zctoFxAlgZOMpEF643byGsItF+aLkEz6H52</span><br><span class="line">VVcaJHpkk8fwOQ3NKhJiWOvcpm2PvulJ/Fz6Qj0i4x6Q0I8LhRYOZG05+Zh6pLIS</span><br><span class="line">GdYW5rsQm7LguSvHJSE2sQMuCF/xSLQ/FFXozTeTZ97E3vAkXGrhWqvnQHSLC6EJ</span><br><span class="line">x3fzMTESQs4y1Iy1e9uwku2wRAQXiF31aVzMU+hoitwD4KcSA1XCuJ7ScafctO9Z</span><br><span class="line">VvsGF5yY2BKL9+UgLP/ZxcwCw0AhqWQpM6/JxmzmuuTKyrTxIoQjXOOySC9F76ee</span><br><span class="line">rPn0rCw5TBzTXUyxALlbgRhNNagRPL/FQpaO5OJlZjEkNmsnCTZZhpLvNzZGZU+G</span><br><span class="line">6fHBci31TJeKZYqIgNQFcEU+UQ0I4lAj/Z3fgQyYXFOXv8g1Z1qEk0zvz+SUbjJ5</span><br><span class="line">IAiwTrYVh4v321ezXfi/9mzC++zqjT14SZ8QsYwCyG1vX7MT0bgbAFmOBW2TKl5E</span><br><span class="line">RQHYcXU+6s/dMuKZtiSJpMDKbOFYjWmbcqjQG4EQZDw2B7ESeiWvGp8AaH/Oa+TE</span><br><span class="line">mbWqR0XAAM7Den5gXoTZ7hqccSVjIrcMq/5PVUPbB6/wWRewfXNVhDyum2UcM/Qo</span><br><span class="line">M20NOJjPIEGk6dx9peveEbwSjY5DqYn+e0XszBT+EgmDYE+TEACliU4Pe5sVXStt</span><br><span class="line">0VuQZf2rV04HYpqnWEbKZeZRN+G1V1YbDSuHaIeZijXOfrPTlAiXeLMgWAsZeYUV</span><br><span class="line">zA0yshM/Zg7DUIlVc6FwmPtkjPrr0MP5OJiKlJGF2NvXsqp5Bemf7Rr8mO1fZBO0</span><br><span class="line">7r8lwV5voQG1CWqMx1t73TCj+LtoJ8TJ3M86Cl6sBrtv/SQRCBy/VfysiV0+07wz</span><br><span class="line">pQvWEVPpPL13XodAGNbzOPgqAf9B7WL4B9YluHKOc7+3QAQwy8Tujy/q9z6FDsn1</span><br><span class="line">48O068P3ioJuZpJAHd0QwO5v9CLM69tvv0QIWD6p10s100iqgXkaXKbLR19fB3Lc</span><br><span class="line">Qj8GmbC/YOO8GBQMkX93X2U5H9pg7EuZEtvUE8qCDXK10caxYbrR6GVr50W0nj78</span><br><span class="line">rOSt8pwwVSswGt2Cclov9nwYAbVALSrltXRDbnP1m9Gjz2qwRwJe7ApYDMOTL7Rd</span><br><span class="line">63QJWUYZX/ugjm5xsg/3VFS3f9S462+n5arM4hxfnjZsTLSwthM7bKV7WKYO2cZ6</span><br><span class="line">2/WzdrXaVq9bhJ4SSfkW5LARH46Rsw9FmDLyZJxIJvBSevy2lqRRsZhR1SY2oZoN</span><br><span class="line">1t223TogOSqIdL2ty8LFZfjQL3G/vBrsIZJJ+gHD0i8y/RiB+MzwdocIt+NZHJS+</span><br><span class="line">zqA/HPfC7ebLC4FY9bJgX5Xyci/WCLkCDQRfYLeIARAA1BM8pHHLMWGFTKEtrhbk</span><br><span class="line">pVfUDxBG5nnDinO40bohHqCJUML0IDIVCdfdzL8QzAtOh9hQkkI9LPQ4985Cf62n</span><br><span class="line">JCSSwtWCHhIb+yuaevt2+d4rR1FFTrluo6EtZtZkjZpiTCQw+oRgWwfPPOJZvoRy</span><br><span class="line">bnitIqOc35iJrfsU62l/RBu4/bVdeLIv2ygRfFmr1Ha2+LHE92SV1X2PzA2ckvKB</span><br><span class="line">6GyYn0Ben8bd0fqro05UrwqQnY19aoAbJ1B6+yfxhuLrAm/TSs9bppXAlMR04/3B</span><br><span class="line">a8OOxynAyHtm2lbRrwoupYzmjpOEuOSjhgnEliAZREEeHykRi1CEk3006c03Kb4u</span><br><span class="line">sxHFvmdjXrTwJiQSylnQLcChUchGg4i5IoEyJf9A1mFn3LQ6Hg9xD01UCmIXwxc8</span><br><span class="line">cich4nLwzYpZNQLbpkYbpiAcc71Uc5zdV5buNduA+As5wbOo2B/LrvT8WZp0o+rZ</span><br><span class="line">4hO4DmRgl060A/K6XwQ7QmD8V3xUE9zojqTzxiDv6tRbs7PPRHyLrjxY4Qp9S7OG</span><br><span class="line">N9n/r0gDQDPNYvdqZ0PkIH73CAsh455VFvxc+EwGn1kcBuAbw2JY64pFAuoYkMZ3</span><br><span class="line">CIpk50PslL9CkbJFD2aIexznc3FhiDmh7Hfjhn48sYARSt6a9CmCvGmEEc1yEVa3</span><br><span class="line">lcMhNWZOYnAEgGyPA/nWOH8AEQEAAYkCNgQYAQgAIBYhBNcNKIGZEy2xvUJ8NXaG</span><br><span class="line">OKq5tBMsBQJfYLeIAhsMAAoJEHaGOKq5tBMsbnUQAIr5OkehW81GrBt9dFC3EMFy</span><br><span class="line">+OLSBe+1olYnekEwRmFiXDfMPVP52Jpk3ozwflkouQY++lyJfBhH+p12or/siau4</span><br><span class="line">JW8WbeTYbnQSv6WypK6Be3iSBb/81gSTKhd0R8pyDK8vyYSIDr6jfNfO/ML5wTG1</span><br><span class="line">K2tS5UOi0QPR8MDmHEWawqa84i5JkcwcLBMVjDkYNDarwh8sgP57O5Gnp4U4UiCz</span><br><span class="line">BTQ3g555FwbQSsAl1LHkyb+9fu3THa88iie0SU1AgwR5pRd+jQr4fv+oV5AP6Bid</span><br><span class="line">2mCm9AEApbIPrTUE5QL922QjaJwQqyMslSIpLBA7ml8rjMF/e3qE6uoQ5VPqqv/M</span><br><span class="line">ixoJTpDajD81iHJc6FFiuxbkyNAzHaowz1oxadP4dkQcwbLvXQwxCKwmHE7JizkE</span><br><span class="line">HIsfc5ExMqeHD3/tofWWz2Jb0zocVw7VQewge6hh1yFQsw/+QYdr80I8ANkLtHPI</span><br><span class="line">W/yhvegzOMn8r4OzOtaT0ONyXU7OZ19B2yxK1TKSD6sppiowVE3bVqH0aOAq8LVk</span><br><span class="line">yy/X2liAwd/OKwBicvFUpXB/TuUMh4vsQaZZOWBC2B5frZn/LCYrIOlWlPHbjqNv</span><br><span class="line">WLHTZ2B8jsZUYYrDUFUIjTpuJHBOtTBISO0DhsVE0ncM0b88rLJlOfuV/cFQb+jK</span><br><span class="line">LenuHzmOsAarap1Jji+RuQINBF9gvCwBEAC3n0pDc5kpW4H/0AJFohhqTlsi6/bv</span><br><span class="line">64UH3a/EeAXAIGdv/n9ffXjxlVke4Ui4dCL792cep3jwrz5zvPKV9YbFs1ENtRXT</span><br><span class="line">ByoPITlLkmq6ixYPQxPtSMTtHB4RKPfCsQajjQZosxOzvkCXafYQBB1Kc2kDaU5G</span><br><span class="line">7t8oiqah0eyr5AiGWIN87fdmmZhhtLkruHiU4kkpplDtVFgHO1E5vYrD65iz7cSe</span><br><span class="line">e9FbCNeAYtP7w3Y+qauDs9odJBqHktg8R7SeUu2u6Tt/A3ScNfs+guGBG9BnEdmr</span><br><span class="line">uMqRhjDJwodeeczHl6HYzgDdaFhjZJI718yGvlyDH/HNYCN/nfy118S4AxHJx/fI</span><br><span class="line">BaPM8mIcJlKHqy0XgnWAl2OUKPmGOmsiIbCseZiDwtuq/SdZ69tr13LO9NGczfKH</span><br><span class="line">VZc4019M4DcpQ1PMw5lZqYRnFsTQJ+T/KE5EOM9xNWBn9Mq8Z6DVMXZ8LYnQiAYl</span><br><span class="line">YFzmGIVHJuVNhX1k5hPDFx8tZM8wLIYMdE9PqR2m0OYUJBlDO+FsUiNTsslZiNX5</span><br><span class="line">hbCCrGbQ3t2bmhk1owbixbXFfNqbHLfPMgGMdKPYSx6utE8yWjpHIjN/NwkD+Oeg</span><br><span class="line">vKNoIsNpeEQd3LoLwh8VaADiPUQhR9B15QeaLZxfItcFneHm7znqf8y+Kii+fupA</span><br><span class="line">/XXhElXsY3ol9QARAQABiQI2BBgBCAAgFiEE1w0ogZkTLbG9Qnw1doY4qrm0EywF</span><br><span class="line">Al9gvCwCGyAACgkQdoY4qrm0Eyy+wxAAma4Wx0E3OuoRjO88lU+8cOoaxXd+aJqa</span><br><span class="line">0fIjkxqZ/5ukFXeWiEwUAuBp5Olnw6LRvu321WO1/XNr7Ok4rM+lPS5saaySe6pU</span><br><span class="line">vc/kI37lu05ML3SQn3602OPtRIqYxz29WxO0bEBy0up4Ba2zXaMGuzzVe2ijxCNV</span><br><span class="line">M828v9QzKhfgTUM8e2KBBWoEIHX5l2Er3KPVtHQxAcjnpI4IpCl8KcfQQOhgJP8f</span><br><span class="line">pMwkOB4+kgFjNR1TpH41N65OJ7Slt2dotMOXVISoPh18PALtpfnir8gW03XSEMAq</span><br><span class="line">EgY2HNFn9YGEKgnaSQTZ9E8E96h+9Wu6usJ5dnFE2ziPhC7hsbAJ50RWYvY7CXv5</span><br><span class="line">2IZp0pmg0dNGglXmGkR/PiwgGT/+XCsDppoxg8ipXXYpagsTEuG8j/DherL/MkI1</span><br><span class="line">mwH/EWY0c1ZkmMO9nj3yhjy55AiVXgzwnQLANzSbaswDYmPBV0eOWIP3B5GZPdoN</span><br><span class="line">kCV3WNGgFVKEZL9Bmqx4d7/+J9jP4L68UxaogL7gwRFLZlCWEdvU9Di56KkJQa3b</span><br><span class="line">LUoshFx87qQ1BRM0dw79b9gCzw4V9E2jWYHsoQzbIi6z9UdpgWm61kvmJ8YB5Kxf</span><br><span class="line">98vntE53bESPkoaCG0728tUio9R5fclVExi0IGjqbAjDKpoVzTQsZ/gvPf0KiLke</span><br><span class="line">INqNVBu02WQ=</span><br><span class="line">=yS2P</span><br><span class="line">-----END PGP PUBLIC KEY BLOCK-----</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我以前生成过很多PGP密钥不过都丢失了，这个密钥是我最近生成的&lt;br&gt;电子邮箱: &lt;a href=&quot;mailto:i@sagiri.me&quot;&gt;i@sagiri.me&lt;/a&gt;&lt;br&gt;密钥指纹: D70D288199132DB1BD427C35768638AAB9B4132C&lt;br&gt;密钥ID: 768638AAB9B4132C&lt;br&gt;密钥已经上传到了 pool.sks-keyservers.net&lt;br&gt;可以使用命令直接导入&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gpg --keyserver hkp://pool.sks-keyservers.net --receive-keys 768638AAB9B4132C&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="PGP" scheme="https://sagiri.me/tags/PGP/"/>
    
  </entry>
  
  <entry>
    <title>更换域名</title>
    <link href="https://sagiri.me/2020/05/30/domain/"/>
    <id>https://sagiri.me/2020/05/30/domain/</id>
    <published>2020-05-30T08:23:49.000Z</published>
    <updated>2020-11-07T07:52:20.698Z</updated>
    
    <content type="html"><![CDATA[<h1 id="更换域名"><a href="#更换域名" class="headerlink" title="更换域名"></a>更换域名</h1><p>域名从eromanga.me 更换到 sagiri.me<br>域名eromanga.me 放弃续费</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;更换域名&quot;&gt;&lt;a href=&quot;#更换域名&quot; class=&quot;headerlink&quot; title=&quot;更换域名&quot;&gt;&lt;/a&gt;更换域名&lt;/h1&gt;&lt;p&gt;域名从eromanga.me 更换到 sagiri.me&lt;br&gt;域名eromanga.me 放弃续费&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>openwrt ospf 路由协议支持</title>
    <link href="https://sagiri.me/2020/05/02/openwrt-ospf/"/>
    <id>https://sagiri.me/2020/05/02/openwrt-ospf/</id>
    <published>2020-05-02T04:23:01.000Z</published>
    <updated>2020-11-07T07:52:20.698Z</updated>
    
    <content type="html"><![CDATA[<p>openwrt 动态路由支持<br>当网络拓扑足够大的时候维护路由器的路由表是一个复杂的事，网络拓扑稍有变更或者链路故障对所有路由器的路由表都要重新配置<br>这个我们可以引入动态路由协议帮助我们维护网络拓扑的路由表<br><a id="more"></a></p><h1 id="常见的路由协议"><a href="#常见的路由协议" class="headerlink" title="常见的路由协议"></a>常见的路由协议</h1><ul><li>RIP 路由信息协议 一种内部网关协议 主要用于小型网络</li><li>OSPF 开放式最短路径优先 一种内部网关协议</li><li>BGP 边界网关协议</li></ul><h1 id="openwrt-动态路由支持"><a href="#openwrt-动态路由支持" class="headerlink" title="openwrt 动态路由支持"></a>openwrt 动态路由支持</h1><p>软件包quagga可以实现动态路由协议</p><ul><li>quagga-bpgd bgp 路由协议支持</li><li>quagga-isisd isis 路由协议支持</li><li>quagga-ospfd ospf 路由协议支持</li><li>quagga-ospf6d ospfv3 路由协议支持</li><li>quagga-ripd rip 路由协议支持</li><li>quagga-vtysh 连接quagga控制台的工具</li><li>quagga-zebra 维护路由表</li></ul><p>安装 quagga-ospfd quagga-vtysh quagga-zebra<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opkg install quagga-ospfd quagga-vtysh quagga-zebra</span><br></pre></td></tr></table></figure></p><h1 id="配置-quagga"><a href="#配置-quagga" class="headerlink" title="配置 quagga"></a>配置 quagga</h1><p>一个简单的网络<br>路由器R1通过Cloud1连接互联网<br>拓扑中有10个网段 192.168.1.0/24 ~ 192.168.10.0.24<br>每台路由器路由表至少要有10条路由转发规则才能实现所有主机互相通信，而且网络拓扑可能增加（你家真大<br><img src="/images/openwrt_ospf_1.png" alt="网络拓扑"><br>R1 配置<br>配置wan 使用动态网络地址转换 wan 口 连接 Cloud1<br>启动 quagga 守护进程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/quagga start</span><br><span class="line">/etc/init.d/quagga enable</span><br></pre></td></tr></table></figure></p><p>输入 <code>vtysh</code> 进入quagga配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">configure terminal # 全局配置模式</span><br><span class="line">router ospf # 启用 ospf</span><br><span class="line">network 192.168.1.0/24 area 0.0.0.0 # 通告这个网段 区域 0</span><br><span class="line">network 192.168.3.0/24 area 0.0.0.0 # 通告这个网段 区域 0</span><br><span class="line">default-information originate # 缺省路由</span><br><span class="line">do write # 保存 很重要</span><br></pre></td></tr></table></figure></p><p>R2 配置<br>跟R1差不多<br>启动 quagga 守护进程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/quagga start</span><br><span class="line">/etc/init.d/quagga enable</span><br></pre></td></tr></table></figure></p><p>输入 <code>vtysh</code> 进入quagga配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">configure terminal</span><br><span class="line">network 192.168.1.0/24 area 0.0.0.0</span><br><span class="line">network 192.168.2.0/24 area 0.0.0.0</span><br><span class="line">network 192.168.5.0/24 area 0.0.0.0</span><br><span class="line">network 192.168.6.0/24 area 0.0.0.0</span><br><span class="line">do write</span><br></pre></td></tr></table></figure></p><p>R3,R4和R2的配置差不多，配置接口对应的ip， 通报网段， 防火墙开启转发  </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;openwrt 动态路由支持&lt;br&gt;当网络拓扑足够大的时候维护路由器的路由表是一个复杂的事，网络拓扑稍有变更或者链路故障对所有路由器的路由表都要重新配置&lt;br&gt;这个我们可以引入动态路由协议帮助我们维护网络拓扑的路由表&lt;br&gt;
    
    </summary>
    
    
      <category term="ospf" scheme="https://sagiri.me/tags/ospf/"/>
    
  </entry>
  
  <entry>
    <title>使用wsl运行windows处理程序</title>
    <link href="https://sagiri.me/2020/01/08/wsl/"/>
    <id>https://sagiri.me/2020/01/08/wsl/</id>
    <published>2020-01-08T03:24:24.000Z</published>
    <updated>2020-11-07T07:52:20.701Z</updated>
    
    <content type="html"><![CDATA[<h1 id="wsl-Windows-Subsystem-for-Linux-windows下的Linux子系统"><a href="#wsl-Windows-Subsystem-for-Linux-windows下的Linux子系统" class="headerlink" title="wsl(Windows Subsystem for Linux) windows下的Linux子系统"></a>wsl(Windows Subsystem for Linux) windows下的Linux子系统</h1><p>要使用wsl要先安装windows10<br><a href="https://www.microsoft.com/zh-cn/software-download/windows10ISO" target="_blank" rel="noopener">微软下载windows10光盘映像（ISO文件）</a><br>安装windows10可以使用物理机安装也可以使用虚拟机安装<br>安装完成后更新系统到最新版本<br>在微软商店搜索wsl,下载Ubuntu<br>打控制面板-程序-程序和功能，点击启用或关闭Windows功能,勾选<code>适用于Linux的Windows子系统</code><br>重启电脑，在开启菜单找到Ubuntu并运行,开始的使用会让你创建一个管理员用户  </p><a id="more"></a><h1 id="wine-Wine-Is-Not-an-Emulator-linux下运行windows应用程序的兼容层"><a href="#wine-Wine-Is-Not-an-Emulator-linux下运行windows应用程序的兼容层" class="headerlink" title="wine(Wine Is Not an Emulator) linux下运行windows应用程序的兼容层"></a>wine(Wine Is Not an Emulator) linux下运行windows应用程序的兼容层</h1><h2 id="安装wine"><a href="#安装wine" class="headerlink" title="安装wine"></a>安装wine</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install wine-stable</span><br></pre></td></tr></table></figure><h2 id="安装wine32"><a href="#安装wine32" class="headerlink" title="安装wine32"></a>安装wine32</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg --add-architecture i386</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install wine32</span><br></pre></td></tr></table></figure><h1 id="wsl运行32位ELF支持"><a href="#wsl运行32位ELF支持" class="headerlink" title="wsl运行32位ELF支持"></a>wsl运行32位ELF支持</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install qemu-user-static</span><br><span class="line">sudo update-binfmts --install i386 /usr/bin/qemu-i386-static --magic &apos;\x7fELF\x01\x01\x01\x03\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x03\x00\x01\x00\x00\x00&apos; --mask &apos;\xff\xff\xff\xff\xff\xff\xff\xfc\xff\xff\xff\xff\xff\xff\xff\xff\xf8\xff\xff\xff\xff\xff\xff\xff&apos;</span><br></pre></td></tr></table></figure><h1 id="图形界面"><a href="#图形界面" class="headerlink" title="图形界面"></a>图形界面</h1><h2 id="安装-xorg"><a href="#安装-xorg" class="headerlink" title="安装 xorg"></a>安装 xorg</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install xorg</span><br></pre></td></tr></table></figure><h2 id="在windows10安装xlaunch，把图形界面从wsl转发到windows"><a href="#在windows10安装xlaunch，把图形界面从wsl转发到windows" class="headerlink" title="在windows10安装xlaunch，把图形界面从wsl转发到windows"></a>在windows10安装xlaunch，把图形界面从wsl转发到windows</h2><p>从(<a href="https://sourceforge.net/projects/xming)[https://sourceforge.net/projects/xming/]" target="_blank" rel="noopener">https://sourceforge.net/projects/xming)[https://sourceforge.net/projects/xming/]</a>  </p><p>到目前为止应该可以运行windows应用程序了<br>这是我用我的电脑使用kvm虚拟机安装的windows10系统中wsl使用wine运行windows游戏效果<br><img src="/images/wsl.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;wsl-Windows-Subsystem-for-Linux-windows下的Linux子系统&quot;&gt;&lt;a href=&quot;#wsl-Windows-Subsystem-for-Linux-windows下的Linux子系统&quot; class=&quot;headerlink&quot; title=&quot;wsl(Windows Subsystem for Linux) windows下的Linux子系统&quot;&gt;&lt;/a&gt;wsl(Windows Subsystem for Linux) windows下的Linux子系统&lt;/h1&gt;&lt;p&gt;要使用wsl要先安装windows10&lt;br&gt;&lt;a href=&quot;https://www.microsoft.com/zh-cn/software-download/windows10ISO&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微软下载windows10光盘映像（ISO文件）&lt;/a&gt;&lt;br&gt;安装windows10可以使用物理机安装也可以使用虚拟机安装&lt;br&gt;安装完成后更新系统到最新版本&lt;br&gt;在微软商店搜索wsl,下载Ubuntu&lt;br&gt;打控制面板-程序-程序和功能，点击启用或关闭Windows功能,勾选&lt;code&gt;适用于Linux的Windows子系统&lt;/code&gt;&lt;br&gt;重启电脑，在开启菜单找到Ubuntu并运行,开始的使用会让你创建一个管理员用户  &lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://sagiri.me/tags/linux/"/>
    
      <category term="windows" scheme="https://sagiri.me/tags/windows/"/>
    
      <category term="wsl" scheme="https://sagiri.me/tags/wsl/"/>
    
  </entry>
  
  <entry>
    <title>pptp协议实现的vpn</title>
    <link href="https://sagiri.me/2019/11/24/vpn-pptp/"/>
    <id>https://sagiri.me/2019/11/24/vpn-pptp/</id>
    <published>2019-11-23T22:19:30.000Z</published>
    <updated>2020-11-07T07:52:20.701Z</updated>
    
    <content type="html"><![CDATA[<p>点对点隧道协议(PPTP)是一种实现虚拟专用网(VPN)的方法。PPTP 在TCP之上使用一个控制通道和 GRE 隧道操作加密 PPP 数据包。<br><a id="more"></a></p><h2 id="安装pptp软件"><a href="#安装pptp软件" class="headerlink" title="安装pptp软件"></a>安装pptp软件</h2><p>centos<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># yum install -y pptpd</span><br></pre></td></tr></table></figure></p><p>ubuntu<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># apt install -y pptpd</span><br></pre></td></tr></table></figure></p><h2 id="配置pptpd"><a href="#配置pptpd" class="headerlink" title="配置pptpd"></a>配置pptpd</h2><p>pptpd配置文件分别是<br>/etc/pptpd.conf<br>/etc/ppp/pptpd-options<br>/etc/ppp/chap-secrets  </p><h3 id="pptpd-conf"><a href="#pptpd-conf" class="headerlink" title="pptpd.conf"></a>pptpd.conf</h3><p>编辑主配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">option /etc/ppp/pptpd-options</span><br><span class="line">localip 10.0.0.1 # 本地地址 随便找个私有地址 10.0.0.0/24 172.16-31.0.0/16 192.168.0.0/16</span><br><span class="line">remoteip 10.0.0.100-200 远程地址 要和本地地址同网络 x-x 是分配的范围</span><br></pre></td></tr></table></figure></p><h3 id="pptpd-options"><a href="#pptpd-options" class="headerlink" title="pptpd-options"></a>pptpd-options</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">name pptpd</span><br><span class="line"># 认证方式</span><br><span class="line">refuse-pap</span><br><span class="line">refuse-chap</span><br><span class="line">refuse-mschap</span><br><span class="line">require-mschap-v2</span><br><span class="line">require-mppe-128 # mppe加密</span><br><span class="line">proxyarp # 代理arp</span><br><span class="line">nobsdcomp</span><br><span class="line">novj</span><br><span class="line">novjccomp</span><br><span class="line">nologfd</span><br><span class="line"></span><br><span class="line">ms-dns 8.8.8.8 # dns 地址1</span><br><span class="line">ms-dns 8.8.4.4 # dns 地址2</span><br></pre></td></tr></table></figure><h3 id="chap-secrets"><a href="#chap-secrets" class="headerlink" title="chap-secrets"></a>chap-secrets</h3><p>添加用户密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;username&gt;  &lt;server&gt;    &lt;password&gt;   &lt;ip&gt;</span><br><span class="line">sagiri      pptpd       123456      *</span><br></pre></td></tr></table></figure></p><h2 id="守护进程"><a href="#守护进程" class="headerlink" title="守护进程"></a>守护进程</h2><p>启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># systemctl start pptpd</span><br></pre></td></tr></table></figure></p><p>开机自启<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># systemctl enable pptpd</span><br></pre></td></tr></table></figure></p><p>pptpd应该启动了，默认会监听1723端口,有防火墙的话要配置防火墙规则</p><h2 id="ip转发"><a href="#ip转发" class="headerlink" title="ip转发"></a>ip转发</h2><p>pptpd可以正常连接了<br>但是客户端不能上网<br>因为客户端把数据包发给服务器后服务器看ip头发现不是发给它自己的包，服务器就把这个包丢了，毕竟服务器又不是路由器  </p><h3 id="临时开启ip转发"><a href="#临时开启ip转发" class="headerlink" title="临时开启ip转发"></a>临时开启ip转发</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># sysctl net.ipv4.ip_forward=1</span><br></pre></td></tr></table></figure><h3 id="永久开启ip转发"><a href="#永久开启ip转发" class="headerlink" title="永久开启ip转发"></a>永久开启ip转发</h3><p>编辑 /etc/sysctl.d/99-sysctl.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.ip_forward=1</span><br></pre></td></tr></table></figure></p><p>应用 sysctl.conf 修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># sysctl --system</span><br></pre></td></tr></table></figure></p><h2 id="DNAT-动态网络地址转换"><a href="#DNAT-动态网络地址转换" class="headerlink" title="DNAT(动态网络地址转换)"></a>DNAT(动态网络地址转换)</h2><p>虽然已经配置了ip转发，但是客户端还是不能上网<br>因为客户端使用的是私有地址<br>现在要把私有ip地址转换为服务器的公有ip地址<br>配置网络地址转换<br>-s 源ip地址 这里是可以填一个网段<br>-o 出网卡<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># iptables -A POSTROUGIN -t nat -s 10.0.0.0/24 -o eth0 -j MASQUERADE</span><br></pre></td></tr></table></figure></p><p>保存配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># iptables-save &gt; /etc/iptables/iptables.rules</span><br></pre></td></tr></table></figure></p><p>参考 <a href="https://wiki.archlinux.org/index.php/PPTP_server" target="_blank" rel="noopener">archlinux wiki PPTP server</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;点对点隧道协议(PPTP)是一种实现虚拟专用网(VPN)的方法。PPTP 在TCP之上使用一个控制通道和 GRE 隧道操作加密 PPP 数据包。&lt;br&gt;
    
    </summary>
    
    
      <category term="vpn" scheme="https://sagiri.me/tags/vpn/"/>
    
  </entry>
  
  <entry>
    <title>uefi启动直接加载内核</title>
    <link href="https://sagiri.me/2019/01/06/uefiBoot/"/>
    <id>https://sagiri.me/2019/01/06/uefiBoot/</id>
    <published>2019-01-06T02:55:13.000Z</published>
    <updated>2020-11-07T07:52:20.698Z</updated>
    
    <content type="html"><![CDATA[<p>uefi(Unified Extensible Firmware Interface）是一种个人电脑系统规范，用来规范操作系统和系统固件之间的软件界面，作为BIOS的替换方案。<br>使用uefi直接加载内核的好处是减小启动时间。<br><a id="more"></a></p><h2 id="验证启动模式"><a href="#验证启动模式" class="headerlink" title="验证启动模式"></a>验证启动模式</h2><p>一般主板会支持两种启动模式 BIOS UEFI<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># ls /sys/firmware/efi/efivars</span><br></pre></td></tr></table></figure></p><p>如果目录不存在，系统可能是BIOS模式启动的。</p><h2 id="EFI分区"><a href="#EFI分区" class="headerlink" title="EFI分区"></a>EFI分区</h2><p>要使用UEFI启动硬盘上要有一个特殊的EFI分区<br>查看分区表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ fdisk -l /dev/sda</span><br></pre></td></tr></table></figure></p><h2 id="把内核和初始化内存复制到EFI分区"><a href="#把内核和初始化内存复制到EFI分区" class="headerlink" title="把内核和初始化内存复制到EFI分区"></a>把内核和初始化内存复制到EFI分区</h2><p>内核和初始化内存一般在 /boot 目录<br>vmlinuz-linux 和 initramfs-linux.img 文件<br>如果没有挂载EFI分区，要挂载<br>复制到EFI分区 /mnt 是挂载的目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># cp /boot/&#123;vmlinuz-linux,initramfs-linux.img&#125; /mnt</span><br></pre></td></tr></table></figure></p><h2 id="添加启动项"><a href="#添加启动项" class="headerlink" title="添加启动项"></a>添加启动项</h2><p>efibootmgr 工具可以访问启动项<br>查看启动项<br>默认下会执行磁盘下的EFI分区下的/EFI/boot/bootx64.efi程序<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">efibootmgr</span><br></pre></td></tr></table></figure></p><p>添加一个启动项<br>-d 是EFI分区所在的设备<br>-p 是EFI的分区号<br>-c 创建一个启动项<br>-L 启动项的标签<br>-l efi程序的路径，注意要用\表示目录，列如EFI分区下的vmlinuz-linux \vmlinuz-linux<br>-u 参数 root 根目录所在的设备 rw 读写 initrd 初始化内存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># efibootmgr -d /dev/sda -p 1 -c -L &quot;Arch Linux&quot; -l /vmlinuz-linux -u &quot;root=/dev/sda2 rw initrd=/initramfs-linux.img&quot;</span><br></pre></td></tr></table></figure><p>注意每次更新内核或生成新的初始化内存的时候要重新把内核和初始化内存镜像复制到EFI分区<br>好的解决方法把EFI分区挂载到/boot目录  </p><h2 id="调整启动顺序"><a href="#调整启动顺序" class="headerlink" title="调整启动顺序"></a>调整启动顺序</h2><p>把第一个要加载的放在前面，可使用 efibootmgr 查看编号<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># efibootmgr -o 1,2,3</span><br></pre></td></tr></table></figure></p><p>参考 <a href="https://wiki.archlinux.org/index.php/EFISTUB" target="_blank" rel="noopener">EFISTUB - ArchWiki</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;uefi(Unified Extensible Firmware Interface）是一种个人电脑系统规范，用来规范操作系统和系统固件之间的软件界面，作为BIOS的替换方案。&lt;br&gt;使用uefi直接加载内核的好处是减小启动时间。&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://sagiri.me/tags/linux/"/>
    
      <category term="uefi" scheme="https://sagiri.me/tags/uefi/"/>
    
  </entry>
  
  <entry>
    <title>xclip剪贴板</title>
    <link href="https://sagiri.me/2018/12/16/xclip/"/>
    <id>https://sagiri.me/2018/12/16/xclip/</id>
    <published>2018-12-16T05:43:26.000Z</published>
    <updated>2020-11-07T07:52:20.701Z</updated>
    
    <content type="html"><![CDATA[<p>xclip是一个命令行剪贴板工具<br><a id="more"></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>sudo pacman -S xclip</code> (对于archlinux)</p><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><p>xclip [选项] [文件]</p><h2 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h2><p>-i 从标准输入或者文件读取文本到剪贴板(默认)<br>-o 输出剪贴板的文本<br>-f 从标准输入读取到剪贴板并且在打印在标准输出<br>-r 删除最后一个换行符(如果有)<br>-h 显示帮助<br>-selection 选择访问,可以选项 buffer-cut,clipboard,primary(默认),secondary  </p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>复制 ~/.ssh/id_rsa.pub 这个文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ xclip ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p><p>打印到标准输出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ xclip -o</span><br></pre></td></tr></table></figure></p><p>复制 ~/.ssh/id_rsa.pub 这个文件到clipboard这个剪贴板，这样你就可以在图形界面下粘贴了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ xclip -selection clipboard ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p><p>通过标准输入读取 <kbd>Ctrt+d</kbd> 结束<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ xclip</span><br></pre></td></tr></table></figure></p><p>通过管道符复制时间并且打印到标准输出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ date | xclip -f</span><br></pre></td></tr></table></figure></p><p>通过重定向符复制 ~/.ssh/id_rsa.pub 这个文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ xclip &lt; .ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p><p>参考 <code>man xclip</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;xclip是一个命令行剪贴板工具&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://sagiri.me/tags/linux/"/>
    
      <category term="tool" scheme="https://sagiri.me/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>单个Wi-FI设备同时作为无线客户端和AP</title>
    <link href="https://sagiri.me/2018/11/05/wifiAP/"/>
    <id>https://sagiri.me/2018/11/05/wifiAP/</id>
    <published>2018-11-05T09:10:39.000Z</published>
    <updated>2020-11-07T07:52:20.701Z</updated>
    
    <content type="html"><![CDATA[<p>通过虚拟网卡实现单个设备同时作为热点和无线客户端<br>需要用到的软件 iw, create_ap, ip<br><a id="more"></a></p><h2 id="无线网卡必须支持AP模式"><a href="#无线网卡必须支持AP模式" class="headerlink" title="无线网卡必须支持AP模式"></a>无线网卡必须支持AP模式</h2><p>要验证这点，请执行 <code>iw list</code> 命令，结果Supported interface modes 段落中应该有AP模式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">➜  iw list</span><br><span class="line">...</span><br><span class="line">        Supported interface modes:</span><br><span class="line">                * IBSS</span><br><span class="line">                * managed</span><br><span class="line">                * AP</span><br><span class="line">                * AP/VLAN</span><br><span class="line">                * monitor</span><br><span class="line">                * P2P-client</span><br><span class="line">                * P2P-GO</span><br><span class="line">                * P2P-device</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>验证设备是否支持并行操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  iw list | grep channels</span><br><span class="line">        total &lt;= 3, #channels &lt;= 2</span><br></pre></td></tr></table></figure></p><p>约束 <code>#channels &lt;= 1</code>说明软件热点必须和wi-fi客户端连接处于同一信道  </p><h2 id="虚拟网络接口"><a href="#虚拟网络接口" class="headerlink" title="虚拟网络接口"></a>虚拟网络接口</h2><p>查看当前网卡 <code>ip address</code>, 会有一个wlan或者wlp开头的网卡<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜  ip link</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">2: wlp2s0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP mode DORMANT group default qlen 1000</span><br><span class="line">    link/ether 40:a3:cc:79:0e:4b brd ff:ff:ff:ff:ff:ff</span><br></pre></td></tr></table></figure></p><p>用wi-fi网卡虚拟一个网络接口 wlps0_ap<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  sudo iw dev wlp2s0 interface add wlp2s0_ap type managed addr 12:34:56:78:ab:cd</span><br></pre></td></tr></table></figure></p><h2 id="开启AP"><a href="#开启AP" class="headerlink" title="开启AP"></a>开启AP</h2><p>使用create_ap用wlp2s0_ap这个网络接口开启一个热点，使用wlp2s0的网络<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  sudo create_ap wlp2s0_ap wlp2s0 sagiri</span><br></pre></td></tr></table></figure></p><p>这样就开启了一个SSID为sagiri，无密码的热点  </p><h2 id="连接网络"><a href="#连接网络" class="headerlink" title="连接网络"></a>连接网络</h2><p>使用wlp2s0这个网卡连接wi-fi，用图像界面就行了，命令行好麻烦的  </p><p>参考 <a href="https://wiki.archlinux.org/index.php/Software_access_point_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87" target="_blank" rel="noopener">archlinux Software access point</a>)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过虚拟网卡实现单个设备同时作为热点和无线客户端&lt;br&gt;需要用到的软件 iw, create_ap, ip&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://sagiri.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>使用ss5搭建SOCKS服务器</title>
    <link href="https://sagiri.me/2018/09/09/ss5Service/"/>
    <id>https://sagiri.me/2018/09/09/ss5Service/</id>
    <published>2018-09-09T13:46:02.000Z</published>
    <updated>2020-11-07T07:52:20.698Z</updated>
    
    <content type="html"><![CDATA[<p>SOCKS是一种网络传输协议，主要用于客户端与外网服务器之间通讯的中间传递。<br>当防火墙后的客户端要访问外网服务器时，就跟SOCKS代理服务器连接。这个代理服务器控制客户端访问外网的资格，允许的话，就将客户端的请求发往外部的服务器。</p><a id="more"></a><p>SOCKS服务器软件</p><ul><li>Dante Socks Server  <a href="http://www.inet.no/dante" target="_blank" rel="noopener">http://www.inet.no/dante</a></li><li>Java Socks Server <a href="http://www.inet.no/dante" target="_blank" rel="noopener">http://www.inet.no/dante</a></li><li>SOCKS4 Server  <a href="https://archive.is/20130502024508/http://www.alhem.net/project/socks4" target="_blank" rel="noopener">https://archive.is/20130502024508/http://www.alhem.net/project/socks4</a></li><li>SS5 Socks Server  <a href="http://ss5.sourceforge.net/" target="_blank" rel="noopener">http://ss5.sourceforge.net/</a></li><li>TcpToute2  <a href="https://github.com/GameXG/TcpRoute2" target="_blank" rel="noopener">https://github.com/GameXG/TcpRoute2</a></li></ul><p>使用SS5,搭建SOCKS服务主要用于翻墙,服务器系统是Centos7  </p><h2 id="去官网下载rpm包"><a href="#去官网下载rpm包" class="headerlink" title="去官网下载rpm包"></a>去官网下载rpm包</h2><p><a href="http://ss5.sourceforge.net/" target="_blank" rel="noopener">SS5官网</a> 还要跳转到sourceforge下载软件 获取到下载链接<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 下载rpm包</span><br><span class="line">wget https://jaist.dl.sourceforge.net/project/ss5/ss5/3.8.9-8/ss5-3.8.9-8.src.rpm</span><br><span class="line"><span class="meta">#</span> 安装</span><br><span class="line">rpm -ivh ss5-3.8.9-8.src.rpm</span><br></pre></td></tr></table></figure></p><h2 id="修改SS5配置文件"><a href="#修改SS5配置文件" class="headerlink" title="修改SS5配置文件"></a>修改SS5配置文件</h2><p>编辑 <code>/etc/opt/ss5/ss5.conf</code> 文件，把找到下面两行并把注释去掉<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auth    0.0.0.0/0               -              -</span><br><span class="line">permit -        0.0.0.0/0       -       0.0.0.0/0       -       -       -       -       -</span><br></pre></td></tr></table></figure></p><p>默认无用户认证<br>如果想要设置用户密码认证，则更改为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auth    0.0.0.0/0               -              u</span><br><span class="line">permit u        0.0.0.0/0       -       0.0.0.0/0       -       -       -       -       -</span><br></pre></td></tr></table></figure></p><p>编辑 <code>/etc/opt/ss5/ss5.passwd</code> 添加用户和密码一行一个（用户和密码之间有个空格）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user1 123456</span><br><span class="line">user2 654321</span><br></pre></td></tr></table></figure></p><p>启动参数默认是1080端口，可在 <code>/etc/sysconfig/ss5</code>更改<br>例如改成1000端口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Add startup option here</span><br><span class="line">SS5_OPTS=&quot; -u root -b 0.0.0.0:1000&quot;</span><br></pre></td></tr></table></figure></p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start ss5.service</span><br></pre></td></tr></table></figure><h2 id="开放防火墙端口"><a href="#开放防火墙端口" class="headerlink" title="开放防火墙端口"></a>开放防火墙端口</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=public --add-port=1080/tcp</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>使用curl测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ curl --socks5 ssr.sagiri.me:1080 google.com</span><br><span class="line">&lt;HTML&gt;&lt;HEAD&gt;&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;TITLE&gt;301 Moved&lt;/TITLE&gt;&lt;/HEAD&gt;&lt;BODY&gt;</span><br><span class="line">&lt;H1&gt;301 Moved&lt;/H1&gt;</span><br><span class="line">The document has moved</span><br><span class="line">&lt;A HREF=&quot;http://www.google.com/&quot;&gt;here&lt;/A&gt;.</span><br><span class="line">&lt;/BODY&gt;&lt;/HTML&gt;</span><br></pre></td></tr></table></figure></p><h2 id="自启"><a href="#自启" class="headerlink" title="自启"></a>自启</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable ss5.service</span><br></pre></td></tr></table></figure><h2 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop ss5.service</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SOCKS是一种网络传输协议，主要用于客户端与外网服务器之间通讯的中间传递。&lt;br&gt;当防火墙后的客户端要访问外网服务器时，就跟SOCKS代理服务器连接。这个代理服务器控制客户端访问外网的资格，允许的话，就将客户端的请求发往外部的服务器。&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://sagiri.me/tags/linux/"/>
    
      <category term="proxy" scheme="https://sagiri.me/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>第一个页面</title>
    <link href="https://sagiri.me/2018/06/01/firstPage/"/>
    <id>https://sagiri.me/2018/06/01/firstPage/</id>
    <published>2018-06-01T04:39:16.000Z</published>
    <updated>2020-11-07T07:52:20.698Z</updated>
    
    <content type="html"><![CDATA[<p>这里是我的博客的第一个页面<br>博客托管于 <a href="https://github.com/EromangaMe/eromanga.me" target="_blank" rel="noopener">GitHub</a><br><a href="htttps://hexo.io" target="_blank" rel="noopener">Hexo</a> 强力驱动 主题 <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">Next</a>  </p><p>域名 <code>eromanga.me</code> 伊罗曼加镇（Eromanga）是位于澳大利亚昆士兰西南部的一个小镇<br><a id="more"></a><br><img src="/images/62748309_p0 .png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里是我的博客的第一个页面&lt;br&gt;博客托管于 &lt;a href=&quot;https://github.com/EromangaMe/eromanga.me&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;htttps://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt; 强力驱动 主题 &lt;a href=&quot;https://github.com/iissnan/hexo-theme-next&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Next&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;域名 &lt;code&gt;eromanga.me&lt;/code&gt; 伊罗曼加镇（Eromanga）是位于澳大利亚昆士兰西南部的一个小镇&lt;br&gt;
    
    </summary>
    
    
      <category term="公告" scheme="https://sagiri.me/tags/%E5%85%AC%E5%91%8A/"/>
    
  </entry>
  
</feed>
